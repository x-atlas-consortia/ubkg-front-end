# Run nginx as an unprivileged user, so an attacker cannot do much if the container is compromised.
user nginx;
# Set the number of worker processes.
worker_processes 1;
# Configure logging.
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
# Set number of worker connections.
events {
worker_connections 1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # default logging format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    server {

        # We need this logging for inspecting auth requests from other internal services
        # Logging to the mounted volume for outside container access
        access_log /usr/src/app/log/nginx_access_ubkg_front_end.log;
        error_log /usr/src/app/log/nginx_error_ubkg_front_end.log warn;

        # Route all traffic to home.html.
         location / {
            gzip off;
            root /usr/share/nginx/html/;
            #try_files $uri $uri/ =404;
            index  home.html;
        }
        # Serve requests for static resources such as JavaScript, Style sheets and images
        location ~* \.(js|jpg|png|css|pdf)$ {
            root /usr/share/nginx/html/images;
        }
    }
    # Optimize file sending.
    sendfile        on;
    keepalive_timeout  65;
}