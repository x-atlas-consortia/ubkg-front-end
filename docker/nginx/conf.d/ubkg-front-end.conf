    server {
        listen 8080;

        # Logging to the mounted volume for outside container access
        access_log /usr/src/app/log/nginx_access_ubkg-front-end.log;
        error_log /usr/src/app/log/nginx_error_ubkg-front-end.log debug;

         # health status endpoint
         location = /status {
             access_log off;
             default_type text/plain;
             add_header Content-Type text/plain;
             return 200 "alive";
        }

        # Default traffic
        location / {
            # Path containing custom home page.
            root /usr/share/nginx;
            autoindex on;
            index home.html;
            try_files $uri $uri/ =404;
        }

        # Authenticate user in UMLS API; route authenticated users to the ubkg-api service.
        location /api {

            # Always enable CORS
            # Response to preflight requests
            if ($request_method = 'OPTIONS') {
                # The directive `add_header` doesn't work when response status code is 401, 403 or 500
                # The `always` parameter is specified so the header field will be added regardless of the response code
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS' always;

                # Custom headers and headers various browsers should be OK with but aren't
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,Authorization, MAuthorization,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

                # Cache the response to this preflight request in browser for 24 hours (86400 seconds)
                # without sending another preflight request
                add_header 'Access-Control-Max-Age' 86400 always;

                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            # Response to the original requests (HTTP methods are case-sensitive) with CORS enabled
            if ($request_method ~ (POST|GET|PUT)) {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,Authorization, MAuthorization,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            }

            # Authenticate user against UMLS API, using the umls-key argument
            # provided in the home page.
            auth_request /umls-auth;

            # If authorized, forward to the ubkg-api server.
            # 1. Use the service name as defined in the Docker Compose file--**not** the
            #    container name.
            # 2. Dependency: defining the default Docker resolver at the http level.
            proxy_pass http://ubkg-api:8080/$arg_endpoint;

        }
        # Serve requests for static resources such as JavaScript, Style sheets and images.
        location ~* \.(js|jpg|png|pdf|css)$ {
            root /usr/share/nginx;
        }

        # Authentication via UMLS API.
        location /umls-auth {

            internal; # Make this location accessible only from within Nginx

            # Pass the original request arguments to the subquery.
            set $query '';
                if ($request_uri ~* "[^\?]+\?(.*)$") {
                    set $query $1;
                }

            # If authorized, forward to the ubkg-auth server.
            # 1. Use the service name as defined in the Docker Compose file--**not** the
            #    container name.
            # 2. Dependency: defining the default Docker resolver at the http level.
            proxy_pass http://ubkg-auth:8080/umls-auth?$query;

            # No need to send the POST body
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-Request-Method $request_method;
            proxy_set_header X-Original-URI $request_uri;

            # Here we use $http_host in case the API is listing on a port other than 80.
            # Because $http_host = $host:$port
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        }

        # Authenticate user in UMLS API; route authenticated users to Guesdt.
        location /guesdt {

            # Always enable CORS
            # Response to preflight requests
            if ($request_method = 'OPTIONS') {
                # The directive `add_header` doesn't work when response status code is 401, 403 or 500
                # The `always` parameter is specified so the header field will be added regardless of the response code
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS' always;

                # Custom headers and headers various browsers should be OK with but aren't
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,Authorization, MAuthorization,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

                # Cache the response to this preflight request in browser for 24 hours (86400 seconds)
                # without sending another preflight request
                add_header 'Access-Control-Max-Age' 86400 always;

                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            # Response to the original requests (HTTP methods are case-sensitive) with CORS enabled
            if ($request_method ~ (POST|GET|PUT)) {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,Authorization, MAuthorization,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            }

            # Authenticate user against UMLS API, using the umls-key argument
            # provided in the home page.
            auth_request /umls-auth;

            # If authorized, forward to the ubkg-guesdt server.
            # 1. Use the service name as defined in the Docker Compose file--**not** the
            #    container name.
            # 2. Dependency: defining the default Docker resolver at the http level.
            proxy_pass http://ubkg-guesdt:8080/;

        }
    }
